// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserData struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserData) Reset()         { *m = UserData{} }
func (m *UserData) String() string { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()    {}
func (*UserData) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *UserData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserData.Unmarshal(m, b)
}
func (m *UserData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserData.Marshal(b, m, deterministic)
}
func (m *UserData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserData.Merge(m, src)
}
func (m *UserData) XXX_Size() int {
	return xxx_messageInfo_UserData.Size(m)
}
func (m *UserData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserData.DiscardUnknown(m)
}

var xxx_messageInfo_UserData proto.InternalMessageInfo

func (m *UserData) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Error struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SessionID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionID) Reset()         { *m = SessionID{} }
func (m *SessionID) String() string { return proto.CompactTextString(m) }
func (*SessionID) ProtoMessage()    {}
func (*SessionID) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *SessionID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionID.Unmarshal(m, b)
}
func (m *SessionID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionID.Marshal(b, m, deterministic)
}
func (m *SessionID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionID.Merge(m, src)
}
func (m *SessionID) XXX_Size() int {
	return xxx_messageInfo_SessionID.Size(m)
}
func (m *SessionID) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionID.DiscardUnknown(m)
}

var xxx_messageInfo_SessionID proto.InternalMessageInfo

func (m *SessionID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UserToUpdate struct {
	User                 *UserData  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	SessionID            *SessionID `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserToUpdate) Reset()         { *m = UserToUpdate{} }
func (m *UserToUpdate) String() string { return proto.CompactTextString(m) }
func (*UserToUpdate) ProtoMessage()    {}
func (*UserToUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *UserToUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserToUpdate.Unmarshal(m, b)
}
func (m *UserToUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserToUpdate.Marshal(b, m, deterministic)
}
func (m *UserToUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserToUpdate.Merge(m, src)
}
func (m *UserToUpdate) XXX_Size() int {
	return xxx_messageInfo_UserToUpdate.Size(m)
}
func (m *UserToUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UserToUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UserToUpdate proto.InternalMessageInfo

func (m *UserToUpdate) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserToUpdate) GetSessionID() *SessionID {
	if m != nil {
		return m.SessionID
	}
	return nil
}

type UserName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserName) Reset()         { *m = UserName{} }
func (m *UserName) String() string { return proto.CompactTextString(m) }
func (*UserName) ProtoMessage()    {}
func (*UserName) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *UserName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserName.Unmarshal(m, b)
}
func (m *UserName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserName.Marshal(b, m, deterministic)
}
func (m *UserName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserName.Merge(m, src)
}
func (m *UserName) XXX_Size() int {
	return xxx_messageInfo_UserName.Size(m)
}
func (m *UserName) XXX_DiscardUnknown() {
	xxx_messageInfo_UserName.DiscardUnknown(m)
}

var xxx_messageInfo_UserName proto.InternalMessageInfo

func (m *UserName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Users struct {
	User                 []*UserData `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Users) Reset()         { *m = Users{} }
func (m *Users) String() string { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()    {}
func (*Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Users.Unmarshal(m, b)
}
func (m *Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Users.Marshal(b, m, deterministic)
}
func (m *Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Users.Merge(m, src)
}
func (m *Users) XXX_Size() int {
	return xxx_messageInfo_Users.Size(m)
}
func (m *Users) XXX_DiscardUnknown() {
	xxx_messageInfo_Users.DiscardUnknown(m)
}

var xxx_messageInfo_Users proto.InternalMessageInfo

func (m *Users) GetUser() []*UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*UserData)(nil), "user.UserData")
	proto.RegisterType((*Error)(nil), "user.Error")
	proto.RegisterType((*SessionID)(nil), "user.SessionID")
	proto.RegisterType((*UserToUpdate)(nil), "user.UserToUpdate")
	proto.RegisterType((*UserName)(nil), "user.UserName")
	proto.RegisterType((*Users)(nil), "user.Users")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x5f, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x9b, 0x36, 0xd1, 0x66, 0x52, 0x5a, 0x18, 0x7c, 0x08, 0x15, 0x45, 0xf6, 0x49, 0x91,
	0x56, 0x89, 0x57, 0xa8, 0x88, 0x2f, 0x22, 0xd1, 0x1e, 0x60, 0x25, 0x83, 0x04, 0x9a, 0x6e, 0xd8,
	0xd9, 0xe2, 0x01, 0xbd, 0x98, 0xec, 0xa4, 0x49, 0x43, 0xc0, 0xb7, 0xf9, 0xf3, 0xed, 0x7c, 0xbf,
	0x19, 0x16, 0xe0, 0xc0, 0x64, 0xd7, 0xb5, 0x35, 0xce, 0x60, 0xe8, 0x63, 0xf5, 0x0e, 0xd3, 0x2d,
	0x93, 0xdd, 0x68, 0xa7, 0xf1, 0x02, 0x22, 0xaa, 0x74, 0xb9, 0x4b, 0x83, 0x9b, 0xe0, 0x36, 0xce,
	0x9b, 0x04, 0x97, 0x30, 0xad, 0x35, 0xf3, 0x8f, 0xb1, 0x45, 0x3a, 0x96, 0x46, 0x97, 0x23, 0x42,
	0xb8, 0xd7, 0x15, 0xa5, 0x13, 0xa9, 0x4b, 0xac, 0xae, 0x20, 0x7a, 0xb6, 0xd6, 0x58, 0x19, 0xe7,
	0x83, 0x6e, 0x9c, 0x4f, 0xd4, 0x25, 0xc4, 0x1f, 0xc4, 0x5c, 0x9a, 0xfd, 0xeb, 0x06, 0xe7, 0x30,
	0x2e, 0x8b, 0x63, 0x7f, 0x5c, 0x16, 0x4a, 0xc3, 0xcc, 0xd3, 0x7c, 0x9a, 0x6d, 0x5d, 0x68, 0x47,
	0xa8, 0x40, 0x28, 0x45, 0x91, 0x64, 0xf3, 0xb5, 0xe0, 0xb7, 0xbc, 0xb9, 0xf4, 0x70, 0x05, 0x31,
	0xb7, 0x03, 0x05, 0x30, 0xc9, 0x16, 0x8d, 0xb0, 0xf3, 0xc9, 0x4f, 0x0a, 0x75, 0xdd, 0x2c, 0xfc,
	0xa6, 0x2b, 0xea, 0xf0, 0x83, 0x1e, 0xfe, 0x3d, 0x44, 0xbe, 0xcf, 0x3d, 0xef, 0xc9, 0x7f, 0xde,
	0xd9, 0x6f, 0x00, 0xa1, 0x2f, 0xe1, 0x1d, 0x9c, 0xbf, 0x90, 0x93, 0x70, 0x68, 0xbe, 0x4c, 0x9a,
	0x82, 0x1c, 0x45, 0x8d, 0x70, 0x05, 0xb3, 0x9c, 0xbe, 0x4b, 0x76, 0x64, 0x45, 0x3f, 0x98, 0x3c,
	0x94, 0x3f, 0x00, 0x34, 0xc7, 0x10, 0x31, 0x9e, 0xc4, 0xed, 0x91, 0x86, 0x0f, 0x1e, 0x61, 0x71,
	0x44, 0xe1, 0x9c, 0xf8, 0xb0, 0x73, 0xdc, 0xb7, 0xf0, 0x7b, 0xb7, 0x2f, 0x44, 0xa3, 0x46, 0x5f,
	0x67, 0xf2, 0x21, 0x9e, 0xfe, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbc, 0xa9, 0x45, 0x36, 0x1e, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	GetUser(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*Error, error)
	RegisterUser(ctx context.Context, in *UserData, opts ...grpc.CallOption) (*Error, error)
	UpdateUser(ctx context.Context, in *UserToUpdate, opts ...grpc.CallOption) (*Error, error)
	GetUsersResults(ctx context.Context, in *UserName, opts ...grpc.CallOption) (*Users, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUser(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/user.User/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) RegisterUser(ctx context.Context, in *UserData, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/user.User/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) UpdateUser(ctx context.Context, in *UserToUpdate, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/user.User/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUsersResults(ctx context.Context, in *UserName, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/user.User/GetUsersResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	GetUser(context.Context, *SessionID) (*Error, error)
	RegisterUser(context.Context, *UserData) (*Error, error)
	UpdateUser(context.Context, *UserToUpdate) (*Error, error)
	GetUsersResults(context.Context, *UserName) (*Users, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) GetUser(ctx context.Context, req *SessionID) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserServer) RegisterUser(ctx context.Context, req *UserData) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedUserServer) UpdateUser(ctx context.Context, req *UserToUpdate) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUserServer) GetUsersResults(ctx context.Context, req *UserName) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsersResults not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUser(ctx, req.(*SessionID))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).RegisterUser(ctx, req.(*UserData))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserToUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UpdateUser(ctx, req.(*UserToUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUsersResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUsersResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetUsersResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUsersResults(ctx, req.(*UserName))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _User_GetUser_Handler,
		},
		{
			MethodName: "RegisterUser",
			Handler:    _User_RegisterUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _User_UpdateUser_Handler,
		},
		{
			MethodName: "GetUsersResults",
			Handler:    _User_GetUsersResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
