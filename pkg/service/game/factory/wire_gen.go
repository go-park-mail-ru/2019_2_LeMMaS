// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package factory

import (
	"github.com/go-park-mail-ru/2019_2_LeMMaS/pkg/logger"
	"github.com/go-park-mail-ru/2019_2_LeMMaS/pkg/service/game/delivery/grpc"
	"github.com/go-park-mail-ru/2019_2_LeMMaS/pkg/service/game/repository"
	"github.com/go-park-mail-ru/2019_2_LeMMaS/pkg/service/game/usecase"
)

// Injectors from wire.go:

func NewGameHandler() (*grpc.GameHandler, error) {
	gameRepository := repository.NewRepository()
	logger, err := NewLogger()
	if err != nil {
		return nil, err
	}
	gameUsecase := usecase.NewGameUsecase(gameRepository, logger)
	gameHandler := grpc.NewGameHandler(gameUsecase)
	return gameHandler, nil
}

// wire.go:

func NewLogger() (logger.Logger, error) {
	sentry, err := logger.NewSentryLogger()
	if err != nil {
		return nil, err
	}
	return logger.NewCombinedLogger(sentry, logger.NewStdoutLogger()), nil
}
