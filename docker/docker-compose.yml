version: '2.4'

networks:
  monitor-net:
    driver: bridge

services:
  web:
    build: images/web
    env_file: ../.env
    working_dir: /home/app/cmd/web
    restart: on-failure
    depends_on:
      - postgres
      - redis
    volumes:
      - ../.:/home/app
    ports:
      - 8080:8080

  postgres:
    image: postgres:11.5
    restart: always
    environment:
      POSTGRES_DB: lemmas
      POSTGRES_USER: root
      POSTGRES_PASSWORD: temppassword
    ports:
      - 5432:5432

  redis:
    build: images/redis
    expose:
    - 6379

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - web
    volumes:
      - ./images/prometheus/conf:/etc/prometheus/
      - ./images/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - 3030:3000
    restart:
      always
    volumes:
      - ./images/grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=root
      - GF_SECURITY_ADMIN_PASSWORD=temppassword
    labels:
      org.label-schema.group: "monitoring"

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100
    restart: always
