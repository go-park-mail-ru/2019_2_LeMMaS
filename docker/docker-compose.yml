version: '2.4'

networks:
  monitor-net:
    driver: bridge

services:
  api:
    build: images/api
    working_dir: /app/cmd/api
    restart: always
    volumes:
      - ../.:/app
    env_file: .env
    ports:
      - ${PORT}:${PORT}

  auth:
    build: images/auth
    working_dir: /app/cmd/auth
    restart: always
    volumes:
      - ../.:/app
    env_file: .env
    environment:
      REDIS_DSN: redis://redis:6379
    expose:
      - ${PORT}

  user:
    build: images/user
    working_dir: /app/cmd/user
    restart: always
    volumes:
      - ../.:/app
    env_file: .env
    environment:
      POSTGRES_DSN: host=postgres port=5432 dbname=lemmas user=root password=temppassword
    expose:
      - ${PORT}

  game:
    build: images/game
    working_dir: /app/cmd/game
    restart: always
    volumes:
      - ../.:/app
    env_file: .env
    expose:
      - ${PORT}

  postgres:
    image: postgres:11.5
    restart: always
    environment:
      POSTGRES_DB: lemmas
      POSTGRES_USER: root
      POSTGRES_PASSWORD: temppassword
    ports:
      - 5432:5432

  redis:
    build: images/redis
    expose:
      - 6379

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./images/prometheus/conf:/etc/prometheus/
      - ./images/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    volumes:
      - ./images/grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMAIN_PASSWORD=temppasword
    labels:
      org.label-schema.group: "monitoring"
    ports:
      - 3030:3000

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100
